<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<section xmlns="http://docbook.org/ns/docbook" version="5.0" xmlns:xlink="http://www.w3.org/1999/xlink" xml:id="_stm32f3xx__it_8c" xml:lang="en-US">
<title>C:/Users/mnich/Desktop/AWatering/Core/Src/stm32f3xx_it.c File Reference</title>
<indexterm><primary>C:/Users/mnich/Desktop/AWatering/Core/Src/stm32f3xx_it.c</primary></indexterm>
<para>

<para>Interrupt Service Routines. </para>
 
</para>
<programlisting>#include &quot;main.h&quot;
#include &quot;stm32f3xx_it.h&quot;
</programlisting><simplesect>
    <title>Functions    </title>
        <itemizedlist>
            <listitem><para><anchor xml:id="_stm32f3xx__it_8c_1a6ad7a5e3ee69cb6db6a6b9111ba898bc"/>void <link linkend="_stm32f3xx__it_8c_1a6ad7a5e3ee69cb6db6a6b9111ba898bc">NMI_Handler</link> (void)</para>

<para>This function handles Non maskable interrupt. </para>
</listitem>
            <listitem><para><anchor xml:id="_stm32f3xx__it_8c_1a2bffc10d5bd4106753b7c30e86903bea"/>void <link linkend="_stm32f3xx__it_8c_1a2bffc10d5bd4106753b7c30e86903bea">HardFault_Handler</link> (void)</para>

<para>This function handles Hard fault interrupt. </para>
</listitem>
            <listitem><para><anchor xml:id="_stm32f3xx__it_8c_1a3150f74512510287a942624aa9b44cc5"/>void <link linkend="_stm32f3xx__it_8c_1a3150f74512510287a942624aa9b44cc5">MemManage_Handler</link> (void)</para>

<para>This function handles Memory management fault. </para>
</listitem>
            <listitem><para><anchor xml:id="_stm32f3xx__it_8c_1a850cefb17a977292ae5eb4cafa9976c3"/>void <link linkend="_stm32f3xx__it_8c_1a850cefb17a977292ae5eb4cafa9976c3">BusFault_Handler</link> (void)</para>

<para>This function handles Pre-fetch fault, memory access fault. </para>
</listitem>
            <listitem><para><anchor xml:id="_stm32f3xx__it_8c_1a1d98923de2ed6b7309b66f9ba2971647"/>void <link linkend="_stm32f3xx__it_8c_1a1d98923de2ed6b7309b66f9ba2971647">UsageFault_Handler</link> (void)</para>

<para>This function handles Undefined instruction or illegal state. </para>
</listitem>
            <listitem><para><anchor xml:id="_stm32f3xx__it_8c_1a3e5ddb3df0d62f2dc357e64a3f04a6ce"/>void <link linkend="_stm32f3xx__it_8c_1a3e5ddb3df0d62f2dc357e64a3f04a6ce">SVC_Handler</link> (void)</para>

<para>This function handles System service call via SWI instruction. </para>
</listitem>
            <listitem><para><anchor xml:id="_stm32f3xx__it_8c_1adbdfb05858cc36fc520974df37ec3cb0"/>void <link linkend="_stm32f3xx__it_8c_1adbdfb05858cc36fc520974df37ec3cb0">DebugMon_Handler</link> (void)</para>

<para>This function handles Debug monitor. </para>
</listitem>
            <listitem><para><anchor xml:id="_stm32f3xx__it_8c_1a6303e1f258cbdc1f970ce579cc015623"/>void <link linkend="_stm32f3xx__it_8c_1a6303e1f258cbdc1f970ce579cc015623">PendSV_Handler</link> (void)</para>

<para>This function handles Pendable request for system service. </para>
</listitem>
            <listitem><para><anchor xml:id="_stm32f3xx__it_8c_1ab5e09814056d617c521549e542639b7e"/>void <link linkend="_stm32f3xx__it_8c_1ab5e09814056d617c521549e542639b7e">SysTick_Handler</link> (void)</para>

<para>This function handles System tick timer. </para>
</listitem>
            <listitem><para><anchor xml:id="_stm32f3xx__it_8c_1a0c3390d4dc5cfceccbeda71aa672d99d"/>void <link linkend="_stm32f3xx__it_8c_1a0c3390d4dc5cfceccbeda71aa672d99d">DMA1_Channel2_IRQHandler</link> (void)</para>

<para>This function handles DMA1 channel2 global interrupt. </para>
</listitem>
            <listitem><para><anchor xml:id="_stm32f3xx__it_8c_1a38ad4725462bdc5e86c4ead4f04b9fc2"/>void <link linkend="_stm32f3xx__it_8c_1a38ad4725462bdc5e86c4ead4f04b9fc2">TIM2_IRQHandler</link> (void)</para>

<para>This function handles TIM2 global interrupt. </para>
</listitem>
            <listitem><para><anchor xml:id="_stm32f3xx__it_8c_1a272ffa65eb8ff5c4a065b0d3473611cd"/>void <link linkend="_stm32f3xx__it_8c_1a272ffa65eb8ff5c4a065b0d3473611cd">I2C1_EV_IRQHandler</link> (void)</para>

<para>This function handles I2C1 event global interrupt / I2C1 wake-up interrupt through EXT line 23. </para>
</listitem>
            <listitem><para><anchor xml:id="_stm32f3xx__it_8c_1a0ca6fd0e6f77921dd1123539857ba0a8"/>void <link linkend="_stm32f3xx__it_8c_1a0ca6fd0e6f77921dd1123539857ba0a8">USART2_IRQHandler</link> (void)</para>

<para>This function handles USART2 global interrupt / USART2 wake-up interrupt through EXT line 26. </para>
</listitem>
        </itemizedlist>
</simplesect>
<simplesect>
    <title>Variables    </title>
        <itemizedlist>
            <listitem><para><anchor xml:id="_stm32f3xx__it_8c_1ae4780ad74b8c24d6fffa8ec7fc8ea105"/>DMA_HandleTypeDef <emphasis role="strong">hdma_i2c1_tx</emphasis></para>
</listitem>
            <listitem><para><anchor xml:id="_stm32f3xx__it_8c_1af7b2c26e44dadaaa798a5c3d82914ba7"/>I2C_HandleTypeDef <emphasis role="strong">hi2c1</emphasis></para>
</listitem>
            <listitem><para><anchor xml:id="_stm32f3xx__it_8c_1a2c80fd5510e2990a59a5c90d745c716c"/>TIM_HandleTypeDef <emphasis role="strong">htim2</emphasis></para>
</listitem>
            <listitem><para><anchor xml:id="_stm32f3xx__it_8c_1aa9479c261d65eecedd3d9582f7f0f89c"/>UART_HandleTypeDef <emphasis role="strong">huart2</emphasis></para>
</listitem>
        </itemizedlist>
</simplesect>
<section>
<title>Detailed Description</title>

<para>Interrupt Service Routines. </para>

<para><caution><title>Attention</title>

<para></para>
</caution>
<formalpara><title><informaltable frame='none'><tgroup cols='1'><colspec align='center'/><tbody><row><entry align='center'>&#169; Copyright (c) 2020 STMicroelectronics. All rights reserved.</entry></row></tbody></tgroup></informaltable></title></formalpara>
</para>

<para>This software component is licensed by ST under BSD 3-Clause license, the &quot;License&quot;; You may not use this file except in compliance with the License. You may obtain a copy of the License at: opensource.org/licenses/BSD-3-Clause </para>
</section>
</section>
