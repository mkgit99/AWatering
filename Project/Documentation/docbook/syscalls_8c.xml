<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<section xmlns="http://docbook.org/ns/docbook" version="5.0" xmlns:xlink="http://www.w3.org/1999/xlink" xml:id="_syscalls_8c" xml:lang="en-US">
<title>C:/Users/mnich/Desktop/AWatering/Core/Src/syscalls.c File Reference</title>
<indexterm><primary>C:/Users/mnich/Desktop/AWatering/Core/Src/syscalls.c</primary></indexterm>
<para>

<para>STM32CubeIDE Minimal System calls file. </para>
 
</para>
<programlisting>#include &lt;sys/stat.h&gt;
#include &lt;stdlib.h&gt;
#include &lt;errno.h&gt;
#include &lt;stdio.h&gt;
#include &lt;signal.h&gt;
#include &lt;time.h&gt;
#include &lt;sys/time.h&gt;
#include &lt;sys/times.h&gt;
</programlisting><simplesect>
    <title>Functions    </title>
        <itemizedlist>
            <listitem><para><anchor xml:id="_syscalls_8c_1aa53ed4b191897a1bfc205aa1da005d24"/>int <emphasis role="strong">__io_putchar</emphasis> (int ch) __attribute__((weak))</para>
</listitem>
            <listitem><para><anchor xml:id="_syscalls_8c_1ad0122671640a3af49792ddaa59e8294e"/>int <emphasis role="strong">__io_getchar</emphasis> (void)</para>
</listitem>
            <listitem><para><anchor xml:id="_syscalls_8c_1a25c7f100d498300fff65568c2fcfe639"/>void <emphasis role="strong">initialise_monitor_handles</emphasis> ()</para>
</listitem>
            <listitem><para><anchor xml:id="_syscalls_8c_1a945e539df8e0f66d3c73c533fe1968ee"/>int <emphasis role="strong">_getpid</emphasis> (void)</para>
</listitem>
            <listitem><para><anchor xml:id="_syscalls_8c_1a062a5101199c3128edd5170f2575bb10"/>int <emphasis role="strong">_kill</emphasis> (int pid, int sig)</para>
</listitem>
            <listitem><para><anchor xml:id="_syscalls_8c_1abc96bd69b58b2deaddb484478d911c1b"/>void <emphasis role="strong">_exit</emphasis> (int status)</para>
</listitem>
            <listitem><para><anchor xml:id="_syscalls_8c_1af9aace1b44b73111e15aa39f06f43456"/><emphasis role="strong">__attribute__</emphasis> ((weak))</para>
</listitem>
            <listitem><para><anchor xml:id="_syscalls_8c_1a5aab5e2acfd600e3667dc915a2bbc7cb"/>int <emphasis role="strong">_close</emphasis> (int file)</para>
</listitem>
            <listitem><para><anchor xml:id="_syscalls_8c_1a41eef54307912a82d20e71c3d47315aa"/>int <emphasis role="strong">_fstat</emphasis> (int file, struct stat *st)</para>
</listitem>
            <listitem><para><anchor xml:id="_syscalls_8c_1ad3134a3dc296622b8d1c5456e481505b"/>int <emphasis role="strong">_isatty</emphasis> (int file)</para>
</listitem>
            <listitem><para><anchor xml:id="_syscalls_8c_1a7a61311bdf1cb025fc07dc2bdae22ce4"/>int <emphasis role="strong">_lseek</emphasis> (int file, int ptr, int dir)</para>
</listitem>
            <listitem><para><anchor xml:id="_syscalls_8c_1a270c9113047edd8d64186710ad76062b"/>int <emphasis role="strong">_open</emphasis> (char *path, int flags,...)</para>
</listitem>
            <listitem><para><anchor xml:id="_syscalls_8c_1aeef0c3372d04caa1bcc99fed2ab6ec72"/>int <emphasis role="strong">_wait</emphasis> (int *status)</para>
</listitem>
            <listitem><para><anchor xml:id="_syscalls_8c_1a70b2f211d665cded5637065aa2bb89dc"/>int <emphasis role="strong">_unlink</emphasis> (char *name)</para>
</listitem>
            <listitem><para><anchor xml:id="_syscalls_8c_1aaf727ebf57cd64d6c58b23e6ee4a4a69"/>int <emphasis role="strong">_times</emphasis> (struct tms *buf)</para>
</listitem>
            <listitem><para><anchor xml:id="_syscalls_8c_1a4711e961db985ed2c850a8be6597af50"/>int <emphasis role="strong">_stat</emphasis> (char *file, struct stat *st)</para>
</listitem>
            <listitem><para><anchor xml:id="_syscalls_8c_1a31da4cd5328defa76a9e2246992aba12"/>int <emphasis role="strong">_link</emphasis> (char *old, char *new)</para>
</listitem>
            <listitem><para><anchor xml:id="_syscalls_8c_1a6cb6331c9d166180903d5fb78b9c9dd7"/>int <emphasis role="strong">_fork</emphasis> (void)</para>
</listitem>
            <listitem><para><anchor xml:id="_syscalls_8c_1ad2a07db8fdf26151eb98ba5711fad8c5"/>int <emphasis role="strong">_execve</emphasis> (char *name, char **argv, char **env)</para>
</listitem>
        </itemizedlist>
</simplesect>
<simplesect>
    <title>Variables    </title>
        <itemizedlist>
            <listitem><para><anchor xml:id="_syscalls_8c_1ad65a8842cc674e3ddf69355898c0ecbf"/>int <emphasis role="strong">errno</emphasis></para>
</listitem>
            <listitem><para><anchor xml:id="_syscalls_8c_1aa006daaf11f1e2e45a6ababaf463212b"/>char ** <emphasis role="strong">environ</emphasis> = __env</para>
</listitem>
        </itemizedlist>
</simplesect>
<section>
<title>Detailed Description</title>

<para>STM32CubeIDE Minimal System calls file. </para>

<para><formalpara><title>Author</title>

<para>Auto-generated by STM32CubeIDE <literallayout><computeroutput>       For more information about which c-functions
       need which of these lowlevel functions
       please consult the Newlib libc-manual
</computeroutput></literallayout> </para>
</formalpara>
<caution><title>Attention</title>

<para></para>
</caution>
<formalpara><title><informaltable frame='none'><tgroup cols='1'><colspec align='center'/><tbody><row><entry align='center'>&#169; Copyright (c) 2020 STMicroelectronics. All rights reserved.</entry></row></tbody></tgroup></informaltable></title></formalpara>
</para>

<para>This software component is licensed by ST under BSD 3-Clause license, the &quot;License&quot;; You may not use this file except in compliance with the License. You may obtain a copy of the License at: opensource.org/licenses/BSD-3-Clause </para>
</section>
</section>
