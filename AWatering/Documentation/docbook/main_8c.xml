<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<section xmlns="http://docbook.org/ns/docbook" version="5.0" xmlns:xlink="http://www.w3.org/1999/xlink" xml:id="_main_8c" xml:lang="en-US">
<title>C:/Users/mnich/Desktop/AWatering/Core/Src/main.c File Reference</title>
<indexterm><primary>C:/Users/mnich/Desktop/AWatering/Core/Src/main.c</primary></indexterm>
<para>

<para>This is the main file of AutoWatering project. It contains functions to measure, water, and display the results of measurements. Also, it has the timer function implemented. </para>
 
</para>
<programlisting>#include &quot;main.h&quot;
#include &quot;adc.h&quot;
#include &quot;dma.h&quot;
#include &quot;i2c.h&quot;
#include &quot;tim.h&quot;
#include &quot;usart.h&quot;
#include &quot;gpio.h&quot;
#include &lt;string.h&gt;
#include &lt;stdio.h&gt;
#include &quot;DHT.h&quot;
#include &quot;GFX.h&quot;
</programlisting><simplesect>
    <title>Functions    </title>
        <itemizedlist>
            <listitem><para>void <link linkend="_main_8c_1a70af21c671abfcc773614a9a4f63d920">SystemClock_Config</link> (void)</para>

<para>System Clock Configuration. </para>
</listitem>
            <listitem><para>void <link linkend="_main_8c_1aa59940f02d134abb7883a21b4c31e2db">watering</link> (void)</para>
</listitem>
            <listitem><para>void <link linkend="_main_8c_1a5c6dfa55b542c5d0c4ef5c0c52a874be">measuring</link> (void)</para>
</listitem>
            <listitem><para>void <link linkend="_main_8c_1a0622a79673db72496d679c5d8d6d13a9">handle_main</link> (void)</para>
</listitem>
            <listitem><para><anchor xml:id="_main_8c_1ad673a78792ca385054ccc8f3f7b847c2"/>void <emphasis role="strong">handle_bluetooth</emphasis> (void)</para>
</listitem>
            <listitem><para>void <link linkend="_main_8c_1aacdf0815129b394c91086170d538e3d1">handle_oled</link> (void)</para>
</listitem>
            <listitem><para>void <link linkend="_main_8c_1a372132d8e20a79f866c8d2e03d8dc60a">init_oled</link> (void)</para>
</listitem>
            <listitem><para>int <link linkend="_main_8c_1a840291bc02cba5474a4cb46a9b9566fe">main</link> (void)</para>

<para>The application entry point. </para>
</listitem>
            <listitem><para>void <link linkend="_main_8c_1a8a3b0ad512a6e6c6157440b68d395eac">HAL_TIM_PeriodElapsedCallback</link> (TIM_HandleTypeDef *htim)</para>

<para>This function is responsible for timer, it sets logic flags, dependent on the amount of seconds. </para>
</listitem>
            <listitem><para>void <link linkend="_main_8c_1ae494a9643f29b87d6d81e5264e60e57b">HAL_UART_RxCpltCallback</link> (UART_HandleTypeDef *huart)</para>

<para>This function manages bluetooth commands. </para>
</listitem>
            <listitem><para>void <link linkend="_main_8c_1a1730ffe1e560465665eb47d9264826f9">Error_Handler</link> (void)</para>

<para>This function is executed in case of error occurrence. </para>
</listitem>
        </itemizedlist>
</simplesect>
<simplesect>
    <title>Variables    </title>
        <itemizedlist>
            <listitem><para><anchor xml:id="_main_8c_1accbd4ee6041b575a9d2e0549a0e2d8c0"/>uint16_t <emphasis role="strong">moisture</emphasis> = 0</para>
</listitem>
            <listitem><para><anchor xml:id="_main_8c_1a8283e22927d240940569319084e173b9"/>float <emphasis role="strong">percent_moisture</emphasis></para>
</listitem>
            <listitem><para><anchor xml:id="_main_8c_1a39b476b1d7e8b4f6d3552013e2bec01a"/>char <emphasis role="strong">msg</emphasis> [60]</para>
</listitem>
            <listitem><para><anchor xml:id="_main_8c_1a445363a2e18d57b66c0096ce1d475707"/>char <emphasis role="strong">msg_oled</emphasis> [58]</para>
</listitem>
            <listitem><para><anchor xml:id="_main_8c_1aaf48d6d66d4ed25f0c8554e83510a142"/>char <emphasis role="strong">buff</emphasis> [6]</para>
</listitem>
            <listitem><para><anchor xml:id="_main_8c_1a9345e82642856a82a30d772306654999"/>uint8_t <emphasis role="strong">measure_counter_flag</emphasis></para>
</listitem>
            <listitem><para><anchor xml:id="_main_8c_1a8ae1f3306006e68202c01eb10f9afd5c"/>uint8_t <emphasis role="strong">measure_counter</emphasis></para>
</listitem>
            <listitem><para><anchor xml:id="_main_8c_1a14bd2a720c1791a0bbc94d24279c37d4"/>uint8_t <emphasis role="strong">pump_flag</emphasis></para>
</listitem>
            <listitem><para><anchor xml:id="_main_8c_1addfd6a40be3a0789e9f76bff64adf13b"/>uint8_t <emphasis role="strong">pump_counter</emphasis></para>
</listitem>
            <listitem><para><anchor xml:id="_main_8c_1aac8982e170c2886db79e88f99ef1a466"/>DHT_DataTypedef <emphasis role="strong">DHT</emphasis></para>
</listitem>
        </itemizedlist>
</simplesect>
<section>
<title>Detailed Description</title>

<para>This is the main file of AutoWatering project. It contains functions to measure, water, and display the results of measurements. Also, it has the timer function implemented. </para>

<para><formalpara><title>Author</title>

<para>: Szymon Kasiński Michał Kobuszewski</para>
</formalpara>
<caution><title>Attention</title>

<para></para>
</caution>
<formalpara><title><informaltable frame='none'><tgroup cols='1'><colspec align='center'/><tbody><row><entry align='center'>&#169; Copyright (c) 2020 STMicroelectronics. All rights reserved.</entry></row></tbody></tgroup></informaltable></title></formalpara>
</para>

<para>This software component is licensed by ST under BSD 3-Clause license, the &quot;License&quot;; You may not use this file except in compliance with the License. You may obtain a copy of the License at: opensource.org/licenses/BSD-3-Clause </para>
</section>
<section>
<title>Function Documentation</title>
<anchor xml:id="_main_8c_1a1730ffe1e560465665eb47d9264826f9"/>    <section>
    <title>Error_Handler()</title>
<indexterm><primary>Error_Handler</primary><secondary>main.c</secondary></indexterm>
<indexterm><primary>main.c</primary><secondary>Error_Handler</secondary></indexterm>
<para><computeroutput>void Error_Handler (void )</computeroutput></para><para>

<para>This function is executed in case of error occurrence. </para>
</para>

<para>
                <formalpara>
                    <title>
Return values                    </title>
                    <para>
                    <table frame="all">
                        <tgroup cols="2" align="left" colsep="1" rowsep="1">
                        <colspec colwidth="1*"/>
                        <colspec colwidth="4*"/>
                        <tbody>
                            <row>
                                <entry>None</entry>
                                <entry>
<para></para>
</entry>
                            </row>
                        </tbody>
                        </tgroup>
                    </table>
                    </para>
                </formalpara>
                </para>
    </section><anchor xml:id="_main_8c_1a8a3b0ad512a6e6c6157440b68d395eac"/>    <section>
    <title>HAL_TIM_PeriodElapsedCallback()</title>
<indexterm><primary>HAL_TIM_PeriodElapsedCallback</primary><secondary>main.c</secondary></indexterm>
<indexterm><primary>main.c</primary><secondary>HAL_TIM_PeriodElapsedCallback</secondary></indexterm>
<para><computeroutput>void HAL_TIM_PeriodElapsedCallback (TIM_HandleTypeDef * htim)</computeroutput></para><para>

<para>This function is responsible for timer, it sets logic flags, dependent on the amount of seconds. </para>
</para>

<para>
                <formalpara>
                    <title>
Parameters                    </title>
                    <para>
                    <table frame="all">
                        <tgroup cols="2" align="left" colsep="1" rowsep="1">
                        <colspec colwidth="1*"/>
                        <colspec colwidth="4*"/>
                        <tbody>
                            <row>
                                <entry>htim</entry>
                                <entry>
<para></para>
</entry>
                            </row>
                        </tbody>
                        </tgroup>
                    </table>
                    </para>
                </formalpara>
                </para>
    </section><anchor xml:id="_main_8c_1ae494a9643f29b87d6d81e5264e60e57b"/>    <section>
    <title>HAL_UART_RxCpltCallback()</title>
<indexterm><primary>HAL_UART_RxCpltCallback</primary><secondary>main.c</secondary></indexterm>
<indexterm><primary>main.c</primary><secondary>HAL_UART_RxCpltCallback</secondary></indexterm>
<para><computeroutput>void HAL_UART_RxCpltCallback (UART_HandleTypeDef * huart)</computeroutput></para><para>

<para>This function manages bluetooth commands. </para>
</para>

<para>
                <formalpara>
                    <title>
Parameters                    </title>
                    <para>
                    <table frame="all">
                        <tgroup cols="2" align="left" colsep="1" rowsep="1">
                        <colspec colwidth="1*"/>
                        <colspec colwidth="4*"/>
                        <tbody>
                            <row>
                                <entry>huart</entry>
                                <entry>
<para>Communication module </para>
</entry>
                            </row>
                        </tbody>
                        </tgroup>
                    </table>
                    </para>
                </formalpara>
                </para>
    </section><anchor xml:id="_main_8c_1a0622a79673db72496d679c5d8d6d13a9"/>    <section>
    <title>handle_main()</title>
<indexterm><primary>handle_main</primary><secondary>main.c</secondary></indexterm>
<indexterm><primary>main.c</primary><secondary>handle_main</secondary></indexterm>
<para><computeroutput>void handle_main (void )</computeroutput></para>
<para>This is function of the main functionality of project. It measures, waters, shows results in BT and starts timer after one loop. </para>
    </section><anchor xml:id="_main_8c_1aacdf0815129b394c91086170d538e3d1"/>    <section>
    <title>handle_oled()</title>
<indexterm><primary>handle_oled</primary><secondary>main.c</secondary></indexterm>
<indexterm><primary>main.c</primary><secondary>handle_oled</secondary></indexterm>
<para><computeroutput>void handle_oled (void )</computeroutput></para>
<para>This function displays measurement on the OLED SSD1306 </para>
    </section><anchor xml:id="_main_8c_1a372132d8e20a79f866c8d2e03d8dc60a"/>    <section>
    <title>init_oled()</title>
<indexterm><primary>init_oled</primary><secondary>main.c</secondary></indexterm>
<indexterm><primary>main.c</primary><secondary>init_oled</secondary></indexterm>
<para><computeroutput>void init_oled (void )</computeroutput></para>
<para>This function initializes default message on the OLED in a moment of turning on the STM. </para>
    </section><anchor xml:id="_main_8c_1a840291bc02cba5474a4cb46a9b9566fe"/>    <section>
    <title>main()</title>
<indexterm><primary>main</primary><secondary>main.c</secondary></indexterm>
<indexterm><primary>main.c</primary><secondary>main</secondary></indexterm>
<para><computeroutput>int main (void )</computeroutput></para><para>

<para>The application entry point. </para>
</para>

<para>
                <formalpara>
                    <title>
Return values                    </title>
                    <para>
                    <table frame="all">
                        <tgroup cols="2" align="left" colsep="1" rowsep="1">
                        <colspec colwidth="1*"/>
                        <colspec colwidth="4*"/>
                        <tbody>
                            <row>
                                <entry>int</entry>
                                <entry>
<para></para>
</entry>
                            </row>
                        </tbody>
                        </tgroup>
                    </table>
                    </para>
                </formalpara>
                </para>
    </section><anchor xml:id="_main_8c_1a5c6dfa55b542c5d0c4ef5c0c52a874be"/>    <section>
    <title>measuring()</title>
<indexterm><primary>measuring</primary><secondary>main.c</secondary></indexterm>
<indexterm><primary>main.c</primary><secondary>measuring</secondary></indexterm>
<para><computeroutput>void measuring (void )</computeroutput></para>
<para>This function measures, transforms soil moisture value to percents and displays the results in bluetooth terminal and on display </para>
    </section><anchor xml:id="_main_8c_1a70af21c671abfcc773614a9a4f63d920"/>    <section>
    <title>SystemClock_Config()</title>
<indexterm><primary>SystemClock_Config</primary><secondary>main.c</secondary></indexterm>
<indexterm><primary>main.c</primary><secondary>SystemClock_Config</secondary></indexterm>
<para><computeroutput>void SystemClock_Config (void )</computeroutput></para><para>

<para>System Clock Configuration. </para>
</para>

<para>
                <formalpara>
                    <title>
Return values                    </title>
                    <para>
                    <table frame="all">
                        <tgroup cols="2" align="left" colsep="1" rowsep="1">
                        <colspec colwidth="1*"/>
                        <colspec colwidth="4*"/>
                        <tbody>
                            <row>
                                <entry>None</entry>
                                <entry>
<para></para>
</entry>
                            </row>
                        </tbody>
                        </tgroup>
                    </table>
                    </para>
                </formalpara>
                </para>

<para>Initializes the RCC Oscillators according to the specified parameters in the RCC_OscInitTypeDef structure.</para>

<para>Initializes the CPU, AHB and APB buses clocks</para>
    </section><anchor xml:id="_main_8c_1aa59940f02d134abb7883a21b4c31e2db"/>    <section>
    <title>watering()</title>
<indexterm><primary>watering</primary><secondary>main.c</secondary></indexterm>
<indexterm><primary>main.c</primary><secondary>watering</secondary></indexterm>
<para><computeroutput>void watering (void )</computeroutput></para>
<para>This function turns on the water pomp. It sets the water pin on STM to high and logic flag to true. </para>
</section>
</section>
</section>
